generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Category {
  id       Int    @id @default(autoincrement()) @db.UnsignedInt
  category String @default("") @db.VarChar(10)

  @@fulltext([category], map: "category")
  @@map("category")
}

model Follow {
  id           Int @id @default(autoincrement()) @db.UnsignedInt
  followerId   Int @db.UnsignedInt @map("follower_id")
  followingId Int @db.UnsignedInt @map("following_id")

  @@index([followerId], map: "follower_id_idx")
  @@index([followingId], map: "following_id_idx")
  @@map("follow")
}

model Like {
  id           Int @id @default(autoincrement()) @db.UnsignedInt
  bookReviewId Int @db.UnsignedInt @map("sejulbook_id")
  likerId      Int @db.UnsignedInt @map("liker_id")

  @@index([likerId], map: "liker_id_idx")
  @@index([bookReviewId], map: "sejulbook_id_idx")
  @@map("likes")
}

model Comment {
  id           Int       @id @default(autoincrement()) @db.UnsignedInt
  content      String    @db.Text @map("reply")
  createdAt    DateTime  @default(dbgenerated("(curtime())")) @db.DateTime(0) @map("replydate")
  bookReviewId Int       @db.UnsignedInt @map("sejulbook_id")
  commenterId  Int       @db.UnsignedInt @map("replyer_id")

  @@index([commenterId], map: "replyer_id_idx")
  @@index([bookReviewId], map: "sejulbook_id_idx")
  @@map("reply")
}

model BookReview {
  id               Int       @id @default(autoincrement()) @db.UnsignedInt
  bookname         String    @db.VarChar(50)
  authors          String    @db.VarChar(50) @map("writer")
  publication      DateTime  @default(dbgenerated("(curdate())")) @db.Date
  publisher        String    @db.VarChar(20)
  rating           Int       @default(3) @db.UnsignedInt @map("grade")
  thumbnail        String    @db.VarChar(250)
  sejul            String    @default(" ") @db.VarChar(200)
  content          String    @default(dbgenerated("(_utf8mb4\\'\\')")) @db.Text @map("sejulplus")
  createdAt        DateTime  @default(dbgenerated("(curtime())")) @db.DateTime(0) @map("datecreated")
  userId           Int       @db.UnsignedInt @map("user_id")
  categoryId       Int       @default(1) @db.UnsignedInt @map("category_id")
  type             Int       @db.UnsignedInt @map("divide")
  originThumbnail  String?   @db.VarChar(250) @map("origin_thumbnail")

  @@index([categoryId], map: "category_id_idx")
  @@index([userId], map: "user_id_idx")
  @@fulltext([bookname], map: "bookname")
  @@fulltext([authors], map: "writer")
  @@map("sejulbook")
}

model Tag {
  id           Int    @id @default(autoincrement()) @db.UnsignedInt
  tag          String @default("") @db.VarChar(15)
  bookReviewId Int    @db.UnsignedInt @map("sejulbook_id")

  @@index([bookReviewId], map: "sejulbook_id_idx")
  @@fulltext([tag], map: "tag")
  @@map("tag")
}

model User {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  email     String    @db.VarChar(30)
  name      String    @unique(map: "nick") @db.VarChar(10) @map("nick")
  gender    Int       @default(0)
  age       String    @db.VarChar(8)
  joindated DateTime  @default(dbgenerated("(curdate())")) @db.Date
  introduce String    @db.VarChar(200)
  sub       String    @db.VarChar(50)

  @@fulltext([name], map: "nick_2")
  @@map("user")
}
